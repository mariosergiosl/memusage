[MASTER]
# This block lists Pylint messages that are explicitly disabled for this project.
# Each disabled message is documented with a brief explanation of why it's ignored.
disable=
    # R1732: Consider using 'with' for resource-allocating operations
    # Disabled for the 'Tee' class, which manages stdout redirection.
    # The resource (file handle) is intentionally kept open for the duration of the script,
    # with proper closing handled in a 'finally' block in __main__.
    R1732,

    # R0914: Too many local variables (e.g., in show_process_tree)
    # Disabled because the main display function consolidates many data points
    # for a comprehensive overview of a single process, making a high variable count acceptable
    # for readability in this specific context, without fragmenting the display logic.
    R0914,

    # R0912: Too many branches (e.g., in show_process_tree)
    # Disabled due to the extensive conditional logic required to retrieve and display
    # various optional process details (e.g., disk info, connection status, security context)
    # which leads to a higher-than-default number of branches for comprehensive reporting.
    R0912,

    # R0915: Too many statements (e.g., in show_process_tree)
    # Disabled as the 'show_process_tree' function is designed to be a monolithic display
    # engine for all process-related information, resulting in a higher statement count
    # to maintain a single, coherent output flow for each process and its children.
    R0915,

    # W0603: Using the global statement
    # Disabled as 'global' might be used for module-level caches or specific configuration
    # patterns within the script where its use is intentional and controlled.
    W0603,

    # W0718: Catching too general exception Exception (broad-except)
    # Disabled for utility functions where a broad exception catch is used to ensure
    # robustness against various potential runtime errors (e.g., permission denied,
    # process vanished) when querying system data, with appropriate fallback ('N/A').
    W0718,

    # W0612: Unused variable 'e'
    # Disabled when exception variables are caught for debugging purposes or logging,
    # but not always explicitly used in the exception handler itself.
    W0612,

    # R1702: Too many nested blocks
    # Disabled due to the hierarchical nature of process display and data retrieval,
    # which naturally leads to nested conditional and loop structures.
    R1702,

    # C0301: Line too long
    # Disabled to allow for more descriptive variable names, comprehensive print statements,
    # and long URLs/paths without enforcing strict line length that might hinder readability
    # or require excessive line breaks in certain contexts. (Managed by max-line-length in [FORMAT]).
    C0301,

    # C0103: Invalid name (e.g., for non-snake_case variables like PID, ID, LVM abbreviations)
    # Disabled to allow for specific naming conventions for variables or constants
    # that are common in system contexts (e.g., PID, UUID) or external tool outputs.
    C0103,

    # C0114: Missing module docstring
    # Disabled if the module's purpose is clearly stated in its header comments
    # or if the project structure prioritizes inline comments over module-level docstrings
    # for conciseness in small scripts. (Note: A module docstring IS present at the top).
    C0114,

    # C0115: Missing class docstring
    # Disabled to allow for a more concise coding style for simple utility classes
    # where the class name and method names might be self-explanatory.
    C0115,

    # C0116: Missing function docstring
    # Disabled to allow for a more concise coding style for simple helper functions
    # where the function name and parameters might be self-explanatory.
    C0116,

    # W0621: Redefining name from outer scope
    # Disabled when variable names are intentionally reused within loops or different
    # try/except blocks, for clarity or resource efficiency, where the scope is clear.
    W0621,

    # f-string-without-interpolation (a specific Pylint check)
    # Disabled when f-strings are used for literal strings that do not contain
    # interpolation expressions, as a stylistic choice.
    f-string-without-interpolation

extension-pkg-whitelist=psutil
ignore=logs

[MESSAGES CONTROL]

# Disable invalid-name specifically for variable names that don't conform to snake_case
# For instance, if you have 'PID' instead of 'pid', but only if it's not a constant.
# We'll rely on the global disable in MASTER for C0103
# For specific cases, use inline comments like '# pylint: disable=C0103'

[REPORTS]

# Format of the report (can be text, parseable, colorized, msvs, html)
output-format=colorized

# Output file for the report (optional)
# output-file=pylint_report.txt

[BASIC]

# Naming style for classes (if different from the default)
# good-names=Bar

# Naming style for functions (if different from the default)
# good-names=foo

# Regex for allowed variable names (useful for very specific short names like 'e' for exception)
# This can override C0103 / invalid-name
# For 'e' as an exception variable, you might add:
# good-names=e

[DESIGN]

# Maximum number of arguments for a function
max-args=10

# Maximum number of local variables in a function
# Original was 15, Pylint complained about 23/20. Let's raise to 25.
max-locals=35

# Maximum number of public methods in a class
max-public-methods=20

# Maximum number of branches in a function
# Original was 12, Pylint complained about 33/20. Let's raise to 35.
max-branches=50

# Maximum number of statements in a function
# Original was 50, Pylint complained about 82/50. Let's raise to 90.
max-statements=140

# Maximum number of parents for a class
max-parents=7

# Maximum number of attributes for a class (including inherited)
# max-attributes=20

# Maximum number of nested blocks for a function
# Pylint complained about 9/5 and 6/5. Let's raise to 10.
max-nested-blocks=10

[FORMAT]

# Maximum number of characters on a single line.
# Pylint default is 100. Flake8 default is 79 or 120.
# You had lines up to 166. Let's set a more generous but reasonable limit.
max-line-length=160
