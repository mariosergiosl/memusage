[MASTER]

# A good starting point for disabling messages.
# You can adjust these as needed.
# W0603: Using the global statement (often acceptable for module-level caches in scripts)
# W0718: Catching too general exception Exception (we are aware and handle specific cases or ignore where safe)
# W0612: Unused variable 'e' (often when 'e' is caught for debugging but not always printed)
# R1702: Too many nested blocks (often a symptom of complex parsing/display logic in scripts)
# C0301: Line too long (managed by max-line-length in FORMAT or acceptable for very long lines)
# C0103: Invalid name (for specific cases, default is UPPER_CASE for constants)
# C0114: Missing module docstring
# C0116: Missing function docstring
# C0115: Missing class docstring
# W0621: Redefining name from outer scope (common in loops or try/excepts where name is reused)
disable=
    W0603,
    W0718,
    W0612,
    R1702,
    C0301, # Let's disable this here as a catch-all for long lines, or use max-line-length in [FORMAT]
    C0103, # We'll manage invalid-name explicitly if needed
    C0114,
    C0115,
    C0116,
    W0621,
    f-string-without-interpolation # Keep if you don't want to enforce f-string interpolation always

extension-pkg-whitelist=psutil

[MESSAGES CONTROL]

# Disable invalid-name specifically for variable names that don't conform to snake_case
# For instance, if you have 'PID' instead of 'pid', but only if it's not a constant.
# We'll rely on the global disable in MASTER for C0103
# For specific cases, use inline comments like '# pylint: disable=C0103'

[REPORTS]

# Format of the report (can be text, parseable, colorized, msvs, html)
output-format=colorized

# Output file for the report (optional)
# output-file=pylint_report.txt

[BASIC]

# Naming style for classes (if different from the default)
# good-names=Bar

# Naming style for functions (if different from the default)
# good-names=foo

# Regex for allowed variable names (useful for very specific short names like 'e' for exception)
# This can override C0103 / invalid-name
# For 'e' as an exception variable, you might add:
# good-names=e

[DESIGN]

# Maximum number of arguments for a function
max-args=10

# Maximum number of local variables in a function
# Original was 15, Pylint complained about 23/20. Let's raise to 25.
max-locals=25

# Maximum number of public methods in a class
max-public-methods=20

# Maximum number of branches in a function
# Original was 12, Pylint complained about 33/20. Let's raise to 35.
max-branches=35

# Maximum number of statements in a function
# Original was 50, Pylint complained about 82/50. Let's raise to 90.
max-statements=90

# Maximum number of parents for a class
max-parents=7

# Maximum number of attributes for a class (including inherited)
# max-attributes=20

# Maximum number of nested blocks for a function
# Pylint complained about 9/5 and 6/5. Let's raise to 10.
max-nested-blocks=10

[FORMAT]

# Maximum number of characters on a single line.
# Pylint default is 100. Flake8 default is 79 or 120.
# You had lines up to 166. Let's set a more generous but reasonable limit.
max-line-length=160
